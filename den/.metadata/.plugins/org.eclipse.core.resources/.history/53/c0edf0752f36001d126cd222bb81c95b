/**
 */
package den.domain.ubicacion.impl;

import den.domain.ubicacion.Ciudad;
import den.domain.ubicacion.Departamento;
import den.domain.ubicacion.Pais;
import den.domain.ubicacion.UbicacionPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentWithInverseEList;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Departamento</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link den.domain.ubicacion.impl.DepartamentoImpl#getId <em>Id</em>}</li>
 *   <li>{@link den.domain.ubicacion.impl.DepartamentoImpl#getNombre <em>Nombre</em>}</li>
 *   <li>{@link den.domain.ubicacion.impl.DepartamentoImpl#getLstCiudad <em>Lst Ciudad</em>}</li>
 *   <li>{@link den.domain.ubicacion.impl.DepartamentoImpl#getOwnedByPais <em>Owned By Pais</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DepartamentoImpl extends EObjectImpl implements Departamento {
	/**
	 * The default value of the '{@link #getId() <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getId()
	 * @generated
	 * @ordered
	 */
	protected static final String ID_EDEFAULT = " ";

	/**
	 * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getId()
	 * @generated
	 * @ordered
	 */
	protected String id = ID_EDEFAULT;

	/**
	 * The default value of the '{@link #getNombre() <em>Nombre</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getNombre()
	 * @generated
	 * @ordered
	 */
	protected static final String NOMBRE_EDEFAULT = " ";

	/**
	 * The cached value of the '{@link #getNombre() <em>Nombre</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getNombre()
	 * @generated
	 * @ordered
	 */
	protected String nombre = NOMBRE_EDEFAULT;

	/**
	 * The cached value of the '{@link #getLstCiudad() <em>Lst Ciudad</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getLstCiudad()
	 * @generated
	 * @ordered
	 */
	protected EList<Ciudad> lstCiudad;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DepartamentoImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return UbicacionPackage.Literals.DEPARTAMENTO;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getId() {
		return id;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setId(String newId) {
		String oldId = id;
		id = newId;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, UbicacionPackage.DEPARTAMENTO__ID, oldId, id));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getNombre() {
		return nombre;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setNombre(String newNombre) {
		String oldNombre = nombre;
		nombre = newNombre;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, UbicacionPackage.DEPARTAMENTO__NOMBRE, oldNombre, nombre));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Ciudad> getLstCiudad() {
		if (lstCiudad == null) {
			lstCiudad = new EObjectContainmentWithInverseEList<Ciudad>(Ciudad.class, this, UbicacionPackage.DEPARTAMENTO__LST_CIUDAD, UbicacionPackage.CIUDAD__OWNED_BY_DEPARTAMENTO);
		}
		return lstCiudad;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Pais getOwnedByPais() {
		if (eContainerFeatureID() != UbicacionPackage.DEPARTAMENTO__OWNED_BY_PAIS) return null;
		return (Pais)eInternalContainer();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetOwnedByPais(Pais newOwnedByPais, NotificationChain msgs) {
		msgs = eBasicSetContainer((InternalEObject)newOwnedByPais, UbicacionPackage.DEPARTAMENTO__OWNED_BY_PAIS, msgs);
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setOwnedByPais(Pais newOwnedByPais) {
		if (newOwnedByPais != eInternalContainer() || (eContainerFeatureID() != UbicacionPackage.DEPARTAMENTO__OWNED_BY_PAIS && newOwnedByPais != null)) {
			if (EcoreUtil.isAncestor(this, newOwnedByPais))
				throw new IllegalArgumentException("Recursive containment not allowed for " + toString());
			NotificationChain msgs = null;
			if (eInternalContainer() != null)
				msgs = eBasicRemoveFromContainer(msgs);
			if (newOwnedByPais != null)
				msgs = ((InternalEObject)newOwnedByPais).eInverseAdd(this, UbicacionPackage.PAIS__LST_DEPARTAMENTO, Pais.class, msgs);
			msgs = basicSetOwnedByPais(newOwnedByPais, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, UbicacionPackage.DEPARTAMENTO__OWNED_BY_PAIS, newOwnedByPais, newOwnedByPais));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case UbicacionPackage.DEPARTAMENTO__LST_CIUDAD:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getLstCiudad()).basicAdd(otherEnd, msgs);
			case UbicacionPackage.DEPARTAMENTO__OWNED_BY_PAIS:
				if (eInternalContainer() != null)
					msgs = eBasicRemoveFromContainer(msgs);
				return basicSetOwnedByPais((Pais)otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case UbicacionPackage.DEPARTAMENTO__LST_CIUDAD:
				return ((InternalEList<?>)getLstCiudad()).basicRemove(otherEnd, msgs);
			case UbicacionPackage.DEPARTAMENTO__OWNED_BY_PAIS:
				return basicSetOwnedByPais(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eBasicRemoveFromContainerFeature(NotificationChain msgs) {
		switch (eContainerFeatureID()) {
			case UbicacionPackage.DEPARTAMENTO__OWNED_BY_PAIS:
				return eInternalContainer().eInverseRemove(this, UbicacionPackage.PAIS__LST_DEPARTAMENTO, Pais.class, msgs);
		}
		return super.eBasicRemoveFromContainerFeature(msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case UbicacionPackage.DEPARTAMENTO__ID:
				return getId();
			case UbicacionPackage.DEPARTAMENTO__NOMBRE:
				return getNombre();
			case UbicacionPackage.DEPARTAMENTO__LST_CIUDAD:
				return getLstCiudad();
			case UbicacionPackage.DEPARTAMENTO__OWNED_BY_PAIS:
				return getOwnedByPais();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case UbicacionPackage.DEPARTAMENTO__ID:
				setId((String)newValue);
				return;
			case UbicacionPackage.DEPARTAMENTO__NOMBRE:
				setNombre((String)newValue);
				return;
			case UbicacionPackage.DEPARTAMENTO__LST_CIUDAD:
				getLstCiudad().clear();
				getLstCiudad().addAll((Collection<? extends Ciudad>)newValue);
				return;
			case UbicacionPackage.DEPARTAMENTO__OWNED_BY_PAIS:
				setOwnedByPais((Pais)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case UbicacionPackage.DEPARTAMENTO__ID:
				setId(ID_EDEFAULT);
				return;
			case UbicacionPackage.DEPARTAMENTO__NOMBRE:
				setNombre(NOMBRE_EDEFAULT);
				return;
			case UbicacionPackage.DEPARTAMENTO__LST_CIUDAD:
				getLstCiudad().clear();
				return;
			case UbicacionPackage.DEPARTAMENTO__OWNED_BY_PAIS:
				setOwnedByPais((Pais)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case UbicacionPackage.DEPARTAMENTO__ID:
				return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
			case UbicacionPackage.DEPARTAMENTO__NOMBRE:
				return NOMBRE_EDEFAULT == null ? nombre != null : !NOMBRE_EDEFAULT.equals(nombre);
			case UbicacionPackage.DEPARTAMENTO__LST_CIUDAD:
				return lstCiudad != null && !lstCiudad.isEmpty();
			case UbicacionPackage.DEPARTAMENTO__OWNED_BY_PAIS:
				return getOwnedByPais() != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (id: ");
		result.append(id);
		result.append(", nombre: ");
		result.append(nombre);
		result.append(')');
		return result.toString();
	}

} //DepartamentoImpl
